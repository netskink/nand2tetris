// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	Register(in=in, load=asel, out=out1); 
	Register(in=in, load=bsel, out=out2); 
	Register(in=in, load=csel, out=out3); 
	Register(in=in, load=dsel, out=out4); 
	Register(in=in, load=esel, out=out5); 
	Register(in=in, load=fsel, out=out6); 
	Register(in=in, load=gsel, out=out7); 
	Register(in=in, load=hsel, out=out8); 

	DMux8Way(in=load,sel=address,a=asel,b=bsel,c=csel,d=dsel,e=esel,f=fsel,g=gsel,h=hsel);
	Mux8Way16(out=out,sel=address,a=out1,b=out2,c=out3,d=out4,e=out5,f=out6,g=out7,h=out8);
}
